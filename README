SLACK TIC-TAC-TOE GAME
By: Michael Deng

INTEGRATION

To integrate this game into a new Slack channel, go to the App Directory 
and search for Slash Commands. Click on Add Configuration and choose an
appropriate command (like '/ttt'). In the URL section of Integration Settings, 
put 'https://slack-game-michaeldeng.herokuapp.com/' (or create your own web
service to host the app on). As for the Token, you need to explicitly add 
that to the production environment.

To increase the board size, change the BOARD_SIZE variable and add additional 
moves to the MOVES dictionary in the constants.py file.

INSTALL

To install this app on your computer, you should have Python (this app was
tested using Python 2.7) and a virtual environment. Clone the github repo 
and type 'pip install -r requirements.txt'. You can configure the database
by changing the SQLALCHEMY_DATABASE_URI in the config.py file. The current
implementation uses PostgreSQL.

TODO

1. Allow players to forfeit.
2. Detect draws early.
3. Save teams that have been validated once (to allow multiple channels
to play at the same time).
4. Forfeit players when they disconnect.
5. Put a timer on each turn and forfeit players who take too long.
6. Refactor some of the repeated code blocks (the repeated error-catching
statements for existence checks).
7. Generate an external documentation with Sphinx.
8. Add more comprehensive integration tests.

ADDITIONAL CONSIDERATIONS

Right now, only the most recent challenge is considered "active". What this
means is that if you challenge player1, and player2 challenges player3, then
player1 cannot accept your challenge anymore. This functionality is deliberate,
but may have to be modified in the future if users consider it unintuitive.

In api.py, there are some repeated error statements because I have to do
existence checks for nested query objects.
